---
// Astro 페이지 컴포넌트
import '@/styles/main.scss';
import Snackbar from '@/components/Snackbar.astro';
---

<html lang="ko">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>Image Generator - 이미지 변환 및 최적화</title>
	</head>
	<body>
		<div class="container">
			<header class="header">
				<h1>🖼️ Image Generator</h1>
				<p>이미지 변환, 크롭, 최적화를 한 번에!</p>
			</header>

			<main class="main-content">
								<div class="upload-section" data-component="upload-section">
					<div class="upload-icon">📁</div>
					<div class="upload-text">이미지를 선택하거나 드래그하여 업로드하세요</div>
					<div class="upload-hint">JPG, PNG, GIF 파일을 지원합니다</div>
					<input type="file" data-target="file-input" class="file-input" accept="image/*" />
				</div>

				<!-- 작업물 관리 툴바 -->
				<div class="workspace-toolbar" data-component="work-actions">
					<div class="toolbar-group">
						<span class="toolbar-title">작업물</span>
						<button class="btn btn-info" data-action="save-work" title="현재 작업물을 저장합니다">💾 저장</button>
						<button class="btn btn-info" data-action="load-work" title="저장된 작업물 목록을 불러옵니다">📂 불러오기</button>
					</div>
					<span class="toolbar-separator"></span>
					<div class="toolbar-group">
						<span class="toolbar-title">관리</span>
						<button class="btn btn-warning" data-action="toggle-auto-save" title="자동 저장을 토글합니다">🔄 자동저장</button>
						<button class="btn btn-danger" data-action="clear-works" title="모든 저장된 작업물을 삭제합니다">🗑️ 삭제</button>
					</div>
					<div class="toolbar-spacer"></div>
					<div class="toolbar-group">
						<span class="status-badge off" data-target="autosave-badge">자동저장: OFF</span>
						<span class="chip" data-target="works-count-chip">작업물 0</span>
					</div>
				</div>

				<div class="preview-section" data-component="preview-section">
					<div class="preview-container">
						<div class="preview-box" data-target="original">
							<h3>원본 이미지</h3>
							<div class="preview-image-container">
								<img data-target="original-image" class="preview-image" alt="원본 이미지" />
							</div>
							<div class="image-info" data-target="original-info">
								<div class="info-item">
									<span class="info-label">파일 크기:</span>
									<span class="info-value" data-target="original-file-size">-</span>
								</div>
								<div class="info-item">
									<span class="info-label">이미지 크기:</span>
									<span class="info-value" data-target="original-image-size">-</span>
								</div>
								<div class="info-item">
									<span class="info-label">형식:</span>
									<span class="info-value" data-target="original-format">-</span>
								</div>
							</div>
						</div>

						<div class="preview-box" data-target="processed">
							<h3>처리된 이미지</h3>
							<div class="preview-image-container">
								<img data-target="processed-image" class="preview-image" alt="처리된 이미지" />
							</div>
							<div class="image-info" data-target="processed-info">
								<div class="info-item">
									<span class="info-label">파일 크기:</span>
									<span class="info-value" data-target="processed-file-size">-</span>
								</div>
								<div class="info-item">
									<span class="info-label">이미지 크기:</span>
									<span class="info-value" data-target="processed-image-size">-</span>
								</div>
								<div class="info-item">
									<span class="info-label">형식:</span>
									<span class="info-value" data-target="processed-format">-</span>
								</div>
								<div class="info-item compression-info" data-target="compression-info" style="display: none;">
									<span class="info-label">압축률:</span>
									<span class="info-value" data-target="compression-ratio">-</span>
								</div>
							</div>
						</div>
					</div>

					<!-- 확대/축소 컨트롤을 위로 이동 -->
					<div class="zoom-controls" data-component="zoom-controls">
						<button class="zoom-btn" data-action="zoom-out" title="축소">−</button>
						<span class="zoom-level" data-target="zoom-level">100%</span>
						<button class="zoom-btn" data-action="zoom-in" title="확대">+</button>
						<button class="zoom-btn" data-action="reset-zoom" title="원본 크기">⟲</button>
					</div>

					<div class="controls-section" data-component="controls-section">
						<div class="controls-grid">
							<div class="control-group">
								<label for="formatSelect">출력 형식</label>
								<select data-target="format-select">
									<option value="original">원본 형식 유지</option>
									<option value="jpeg">JPEG</option>
									<option value="png">PNG</option>
									<option value="webp">WebP</option>
								</select>
							</div>

							<!-- JPEG 품질 설정 -->
							<div class="control-group" data-component="control-group" data-type="jpeg-quality">
								<label for="jpegQualitySlider">JPEG 품질 (1-100)</label>
								<div class="control-inline">
									<input type="range" data-target="jpeg-quality-slider" min="1" max="100" step="1" value="80" />
									<input type="number" data-target="jpeg-quality-input" min="1" max="100" placeholder="1–100" />
									<span data-target="jpeg-quality-value">80%</span>
								</div>
							</div>

							<!-- PNG 압축 설정 -->
							<div class="control-group" data-component="control-group" data-type="png-compression" style="display: none;">
								<label for="pngCompressionSlider">PNG 압축 레벨 (0-9)</label>
								<div class="control-inline">
									<input type="range" data-target="png-compression-slider" min="0" max="9" value="6" />
									<input type="number" data-target="png-compression-input" min="0" max="9" placeholder="0–9" />
									<span data-target="png-compression-value">6</span>
								</div>
								<small>0-3: 원본 크기, 4-6: 약간 축소, 7-9: 크게 축소</small>
							</div>

							<!-- WebP 품질 설정 -->
							<div class="control-group" data-component="control-group" data-type="webp-quality" style="display: none;">
								<label for="webpQualitySlider">WebP 품질 (1-100)</label>
								<div class="control-inline">
									<input type="range" data-target="webp-quality-slider" min="1" max="100" value="80" />
									<input type="number" data-target="webp-quality-input" min="1" max="100" placeholder="1–100" />
									<span data-target="webp-quality-value">80%</span>
								</div>
								<div class="checkbox-group">
									<input type="checkbox" data-target="webp-transparency" />
									<label for="webpTransparency">투명도 지원</label>
								</div>
							</div>

							<div class="control-group">
								<label for="widthPreset">해상도 프리셋</label>
								<select data-target="width-preset">
									<option value="">사용자 지정</option>
									<option value="3840">3840 px — 4K (UHD)</option>
									<option value="2560">2560 px — 2K (QHD)</option>
									<option value="1920">1920 px — FHD (1080p)</option>
								</select>
							</div>
							<div class="control-group">
								<label for="maxWidth">최대 너비 (px)</label>
								<input type="number" data-target="max-width" placeholder="자동" />
							</div>
							<div class="control-group">
								<label for="maxHeight">최대 높이 (px)</label>
								<input type="number" data-target="max-height" placeholder="자동" />
							</div>
						</div>

						<div class="action-buttons" data-component="main-action-buttons">
							<button class="btn btn-primary" data-action="process-image" title="업로드된 이미지를 선택한 설정으로 처리합니다">이미지 처리</button>
							<button class="btn btn-secondary" data-action="crop-mode" title="이미지의 특정 영역을 선택하여 크롭합니다">크롭 모드</button>
							<button class="btn btn-warning" data-action="reset-image" title="업로드된 이미지를 초기화하고 새 이미지를 업로드할 수 있습니다">이미지 초기화</button>
							<button class="btn btn-secondary" data-action="reset-all" title="모든 설정을 초기화하고 처음부터 다시 시작합니다">새로 시작</button>
						</div>



						<!-- 사이즈 별 저장 옵션 -->
						<div class="size-options" data-component="size-options" style="display: none;">
							<h4>저장 크기 선택</h4>
							<div class="size-checkboxes">
								<div class="size-option">
									<input type="checkbox" data-target="size-1_5x" value="1.5" />
									<label for="size1_5x">@x1.5 (1.5배 크기)</label>
								</div>
								<div class="size-option">
									<input type="checkbox" data-target="size-1x" value="1" checked />
									<label for="size1x">@x1 (원본 크기)</label>
								</div>
								<div class="size-option">
									<input type="checkbox" data-target="size-2x" value="2" />
									<label for="size2x">@x2 (2배 크기)</label>
								</div>
								<div class="size-option">
									<input type="checkbox" data-target="size-3x" value="3" />
									<label for="size3x">@x3 (3배 크기)</label>
								</div>
								<div class="size-option">
									<input type="checkbox" data-target="size-4x" value="4" />
									<label for="size4x">@x4 (4배 크기)</label>
								</div>
							</div>
							<button class="btn btn-success" data-action="download-multi">다운로드</button>
						</div>
					</div>

					<div class="crop-section" data-component="crop-section">
						<h3>이미지 크롭</h3>
						<p>드래그하여 크롭 영역을 선택하세요</p>

						<!-- 크롭 정보 입력 영역 -->
						<div class="crop-info" data-component="crop-info">
							<div class="crop-info-item">
								<span class="crop-info-label">X:</span>
								<input type="number" class="crop-info-input" data-target="crop-x" value="0" min="0" />
							</div>
							<div class="crop-info-item">
								<span class="crop-info-label">Y:</span>
								<input type="number" class="crop-info-input" data-target="crop-y" value="0" min="0" />
							</div>
							<div class="crop-info-item">
								<span class="crop-info-label">Width:</span>
								<input type="number" class="crop-info-input" data-target="crop-width" value="0" min="1" />
							</div>
							<div class="crop-info-item">
								<span class="crop-info-label">Height:</span>
								<input type="number" class="crop-info-input" data-target="crop-height" value="0" min="1" />
							</div>
						</div>

						<div class="crop-container">
							<img data-target="crop-image" class="crop-image" alt="크롭할 이미지" />
							<div class="crop-overlay" data-target="crop-overlay">
								<!-- 모서리 핸들 -->
								<div class="crop-handle" data-target="crop-handle" data-position="nw"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="n"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="ne"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="w"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="e"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="sw"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="s"></div>
								<div class="crop-handle" data-target="crop-handle" data-position="se"></div>
							</div>
						</div>
						<div class="action-buttons" data-component="crop-action-buttons">
							<button class="btn btn-success" data-action="apply-crop">크롭 적용</button>
							<button class="btn btn-secondary" data-action="cancel-crop">취소</button>
						</div>
					</div>
				</div>
			</main>
		</div>

		<!-- 프라이버시 안내 섹션 -->
		<footer class="privacy-footer">
			<div class="privacy-content">
				<div class="privacy-info">
					<h4>🔒 개인정보 보호 안내</h4>
					<p>이 애플리케이션은 <strong>완전히 클라이언트 사이드</strong>에서 동작합니다.</p>
					<ul>
						<li>✅ <strong>모든 데이터는 사용자의 브라우저에만 저장</strong>됩니다</li>
						<li>✅ <strong>서버로 데이터가 전송되지 않습니다</strong></li>
						<li>✅ <strong>개인정보 수집 및 저장을 하지 않습니다</strong></li>
						<li>✅ <strong>이미지 처리는 사용자의 컴퓨터에서만 수행</strong>됩니다</li>
					</ul>
					<p class="privacy-note">작업물은 브라우저의 LocalStorage에 저장되며, 브라우저 데이터를 삭제하면 함께 삭제됩니다.</p>
				</div>
			</div>
		</footer>

		<!-- 작업물 목록 모달 -->
		<div class="work-modal" data-component="work-modal">
			<div class="work-modal-content">
				<div class="work-modal-header">
					<h3>저장된 작업물</h3>
					<button class="close-btn" data-action="close-modal" data-target="work-modal">&times;</button>
				</div>
				<div class="work-modal-body">
					<div class="work-list" data-target="work-list">
						<!-- 작업물 목록이 여기에 동적으로 추가됩니다 -->
					</div>
					<div class="work-empty" data-target="work-empty" style="display: none;">
						<p>저장된 작업물이 없습니다.</p>
					</div>
				</div>
			</div>
		</div>

		<!-- 작업물 저장 모달 -->
		<div class="work-save-modal" data-component="work-save-modal">
			<div class="work-save-modal-content">
				<div class="work-save-modal-header">
					<h3>작업물 저장</h3>
					<button class="close-btn" data-action="close-modal" data-target="work-save-modal">&times;</button>
				</div>
				<div class="work-save-modal-body">
					<div class="form-group">
						<label for="workNameInput">작업물 이름</label>
						<input type="text" data-target="work-name-input" placeholder="작업물 이름을 입력하세요" />
					</div>
					<div class="work-save-preview">
						<h4>저장할 내용</h4>
						<div class="preview-item">
							<span class="preview-label">원본 이미지:</span>
							<span class="preview-value" data-target="save-original-preview">-</span>
						</div>
						<div class="preview-item">
							<span class="preview-label">처리된 이미지:</span>
							<span class="preview-value" data-target="save-processed-preview">-</span>
						</div>
						<div class="preview-item">
							<span class="preview-label">설정:</span>
							<span class="preview-value" data-target="save-settings-preview">-</span>
						</div>
					</div>
					<div class="work-save-actions">
						<button class="btn btn-primary" data-action="confirm-save-work">저장</button>
						<button class="btn btn-secondary" data-action="cancel-save-work">취소</button>
					</div>
				</div>
			</div>
		</div>

		<Snackbar />
		<script type="module" src={import.meta.env.BASE_URL === '/Image-Generator' ? import.meta.env.BASE_URL + '/js/app.js' : '/src/js/app.js'}></script>
	</body>
</html>
